// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using glovers_backstore.Data;

#nullable disable

namespace glovers_backstore.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20240721152437_AddProdReviewAndSeedProducts")]
    partial class AddProdReviewAndSeedProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("glovers_backstore.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Fruit",
                            Description = "Fresh red apple",
                            Image = "pink_apple.jpg",
                            Price = 0.99m,
                            Title = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Fruit",
                            Description = "Ripe yellow banana",
                            Image = "bannana.jpg",
                            Price = 0.59m,
                            Title = "Banana"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Fruit",
                            Description = "Juicy orange",
                            Image = "orange.jpg",
                            Price = 1.19m,
                            Title = "Orange"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Vegetable",
                            Description = "Fresh green broccoli",
                            Image = "brocolli.jpg",
                            Price = 1.79m,
                            Title = "Broccoli"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Vegetable",
                            Description = "Crunchy orange carrot",
                            Image = "carrot.jpg",
                            Price = 0.89m,
                            Title = "Fresh Carrots"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Vegetable",
                            Description = "Red ripe tomato",
                            Image = "tomato.jpg",
                            Price = 1.49m,
                            Title = "Pack of 3 Tomatos"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Vegetable",
                            Description = "Starchy brown potato",
                            Image = "potato.jpg",
                            Price = 0.99m,
                            Title = "Baking Potatos"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Bakery",
                            Description = "Whole wheat bread",
                            Image = "bread.jpg",
                            Price = 2.49m,
                            Title = "Bread"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Dairy",
                            Description = "Fresh whole milk",
                            Image = "milk.jpg",
                            Price = 1.49m,
                            Title = "Whole Milk"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Dairy",
                            Description = "Cheddar cheese block",
                            Image = "cheese.jpg",
                            Price = 3.99m,
                            Title = "Cheddar Cheese"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Dairy",
                            Description = "Plain Greek yogurt",
                            Image = "yoghurt.jpg",
                            Price = 0.99m,
                            Title = "Greek Yogurt"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Meat",
                            Description = "Boneless skinless chicken breast",
                            Image = "chicken-breast.jpg",
                            Price = 4.99m,
                            Title = "Chicken Breast"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Meat",
                            Description = "Juicy beef steak",
                            Image = "beef-steak.jpg",
                            Price = 9.99m,
                            Title = "Beef Steak"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Seafood",
                            Description = "Fresh salmon fillet",
                            Image = "salmon-fillet.jpg",
                            Price = 12.99m,
                            Title = "Salmon Fillet"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Seafood",
                            Description = "Frozen peeled shrimp",
                            Image = "shrimp.jpg",
                            Price = 14.99m,
                            Title = "Frozen Shrimp"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Grain",
                            Description = "Whole grain pasta",
                            Image = "pasta.jpg",
                            Price = 1.29m,
                            Title = "Pene Pasta"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Grain",
                            Description = "Long grain rice",
                            Image = "rice.jpg",
                            Price = 1.09m,
                            Title = "White Rice"
                        },
                        new
                        {
                            Id = 18,
                            Category = "Grain",
                            Description = "Rolled oats",
                            Image = "oats.jpg",
                            Price = 2.49m,
                            Title = "Kirkland Oats"
                        },
                        new
                        {
                            Id = 19,
                            Category = "Nuts",
                            Description = "Raw whole almonds",
                            Image = "almonds.jpg",
                            Price = 5.99m,
                            Title = "Kirkland Almonds"
                        },
                        new
                        {
                            Id = 20,
                            Category = "Spreads",
                            Description = "Creamy peanut butter",
                            Image = "peanut-butter.jpg",
                            Price = 3.49m,
                            Title = "Jif Peanut Butter"
                        });
                });

            modelBuilder.Entity("glovers_backstore.Data.Models.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("glovers_backstore.Data.Models.ProductReview", b =>
                {
                    b.HasOne("glovers_backstore.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
